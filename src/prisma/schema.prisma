generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum UserRole {
  SUPER_ADMIN
  VENDOR
  DRIVER
}

model User {
  id         Int      @id @default(autoincrement())
  name       String?
  phone      String?  @unique
  email      String?  @unique
  role       UserRole @default(DRIVER)
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  Vendor     Vendor?
  Driver     Driver?
}

model Document {
  id         Int      @id @default(autoincrement())
  type       String
  filename   String
  key        String
  url        String
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  vendor_id  Int?
  driver_id  Int?
  Vendor     Vendor?  @relation(fields: [vendor_id], references: [id])
  Driver     Driver?  @relation(fields: [driver_id], references: [id])
}

model Vendor {
  id            Int             @id @default(autoincrement())
  User          User            @relation(fields: [user_id], references: [id])
  user_id       Int             @unique
  name          String
  avatar        String?
  email         String          @unique
  phone         String          @unique
  address       String
  city          String
  state         String
  pincode       String
  created_at    DateTime        @default(now())
  updated_at    DateTime        @updatedAt
  Documents     Document[]
  ClientSites   ClientSite[]
  MetaData      MetaData[]
  BusinessModel BusinessModel[]
}

model Driver {
  id         Int        @id @default(autoincrement())
  User       User       @relation(fields: [user_id], references: [id])
  user_id    Int        @unique
  name       String?
  avatar     String?
  phone      String     @unique
  email      String?
  address    String?
  gender     String?
  bankName   String?
  accNumber  String?
  ifscCode   String?
  dob        DateTime?
  created_at DateTime   @default(now())
  updated_at DateTime   @updatedAt
  Documents  Document[]
  MetaData   MetaData[]
}

model AppConfig {
  id         Int      @id @default(autoincrement())
  type       String
  value      String
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}

model ClientSite {
  id             Int             @id @default(autoincrement())
  name           String
  location       String
  avatar         String
  workingDays    Json
  contactNumbers Json
  Vendor         Vendor          @relation(fields: [vendor_id], references: [id])
  vendor_id      Int
  created_at     DateTime        @default(now())
  updated_at     DateTime        @updatedAt
  BusinessModel  BusinessModel[]
}

model MetaData {
  id         Int      @id @default(autoincrement())
  key        String
  value      String
  vendor_id  Int?
  driver_id  Int?
  Vendor     Vendor?  @relation(fields: [vendor_id], references: [id])
  Driver     Driver?  @relation(fields: [driver_id], references: [id])
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}

enum BusinessModelType {
  SLAB
  KM_FARE
  PACKAGE
}

model BusinessModel {
  id            Int               @id @default(autoincrement())
  name          String
  created_at    DateTime          @default(now())
  updated_at    DateTime          @updatedAt
  type          BusinessModelType
  modeldata     Json
  vendor_id     Int
  clientsite_id Int
  Vendor        Vendor            @relation(fields: [vendor_id], references: [id])
  ClientSite    ClientSite        @relation(fields: [clientsite_id], references: [id])
}
